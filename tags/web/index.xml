<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on vv13&#39;s blog</title>
    <link>/tags/web/</link>
    <description>Recent content in Web on vv13&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 06 Feb 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>去他妈的适配</title>
      <link>/posts/css_adapt/</link>
      <pubDate>Tue, 06 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/posts/css_adapt/</guid>
      <description>基础 屏幕尺寸 屏幕尺寸即屏幕对角线之间的距离，单位为英寸(inch)。单位换算如下：
 1 inch = 2.54 cm 1 cm = 0.</description>
    </item>
    
    <item>
      <title>d3-intro</title>
      <link>/posts/d3-intro/</link>
      <pubDate>Tue, 24 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/d3-intro/</guid>
      <description>D3.js是一个JavaScript库，它可以通过数据来操作文档。D3可以通过使用HTML、SVG和CSS把数据鲜活形象地展现出来。D3严格遵循Web标准，因而可以让你的程序轻松兼容现代主流浏览器并避免对特定框架的依赖。同时，它提供了强大的可视化组件，可以让使用者以数据驱动的方式去操作DOM。
D3允许将数据绑定到DOM中，然后基于数据驱动去变化DOM。例如可以用数字数组来生成html的表格，或者使用相同数据创建一个平滑响应的SVG条形图。
选择器 使用W3C DOM API十分繁琐，因此D3使用selections，一种声明式的方式来随意的操纵节点。
例如原dom有操作方式如下：
var paragraphs = document.</description>
    </item>
    
    <item>
      <title>css的BFC特性</title>
      <link>/posts/bfc-intro/</link>
      <pubDate>Mon, 23 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/bfc-intro/</guid>
      <description>预备知识 毗邻元素
只要两个容器之间没有被非空内容、padding、border或clear隔开，那么就可以称作毗邻元素，父组件相对于其第一个子元素或最后一个子元素，只要没有相隔任何上述条件，也可称之为毗邻元素
普通流(normal flow)
在普通流中，元素按照其在HTML中的先后顺序至上而下布局，这个过程中，行内元素水平排列，直到当行被占满后换行，块级元素则会被渲染为一个新行，除非另外指定，否则所有元素默认都是普通流定位。
以下情况会脱离文档流而存在，分别是：float: left、position: absolute、position: fixed</description>
    </item>
    
    <item>
      <title>flex布局</title>
      <link>/posts/flex%E5%B8%83%E5%B1%80/</link>
      <pubDate>Sat, 21 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>/posts/flex%E5%B8%83%E5%B1%80/</guid>
      <description>简介 flex即弹性盒子布局，它比传统的布局提供更大的灵活性，w3c组织在09年提出这个概念，目前已经广泛应用于支持各个浏览器。
它最大的特性是可以使子元素充分的利用容器的空间，当空间不足时也可进行收缩，以此来适应各种各样的屏幕大小，也能根据权重排列子元素的顺序。
设置容器为flex布局，只需要设置display: flex即可。它将具有以下特性： 1. 子元素float、clear、vertical-align将失效。 2. 存在主轴(默认为水平)与交叉轴，通过flex-direction可设置主轴的方向。</description>
    </item>
    
  </channel>
</rss>